services:
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  postgres:
    image: "postgres:alpine"
    environment:
      POSTGRES_USER : "suave"
      POSTGRES_PASSWORD : "suave"
      POSTGRES_DB : "authorization-service"
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U suave -d authorization_service"]
      interval: 10s
      start_period: 30s
      timeout: 10s
      retries: 5

  suave-authorization-server:
    build: .
    ports:
      - "80:80"
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
      redis:
        condition: service_healthy
        restart: true
    environment:
      # use `openssl rand -hex 32` to generate a `SECRET_KEY`
      # then update this environment variable
      # do not leave it an empty string before running
      SECRET_KEY : "27d133cf1dff3abe96a0311480249261a535f68a1708dff53ff45a31f23defb3"
      ALGORITHM : "HS256"
      ACCESS_TOKEN_EXPIRE_MINUTES : 30
      SQLITE_URL-sqlite : "sqlite:///db.db"
      POSTGRES_USER : "suave"
      POSTGRES_PASSWORD : "suave"
      POSTGRES_DB : "authorization_service"
      POSTGRES_URL : "postgresql+psycopg2://suave:suave@postgres:5432/authorization_service"
