services:
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  postgres:
    image: "postgres:alpine"
    environment:
      POSTGRES_USER : "suave"
      POSTGRES_PASSWORD : "suave"
      POSTGRES_DB : "authsvc"
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U suave -d authsvc"]
      interval: 10s
      start_period: 30s
      timeout: 10s
      retries: 3
  suave-authorization-server:
      build: .
      ports:
        - "80:80"
      depends_on:
        postgres:
          condition: service_healthy
        redis:
          condition: service_healthy
      restart: always
      environment:
        # use `openssl rand -hex 32` to generate a `SECRET_KEY`
        # then update this environment variable
        # do not leave it an empty string before running
        SECRET_KEY: "ef91c8e5316c1ba1bff8e0cf1fbe95d0a6533c0494c37ea9b6cec2d412be0d6a"
        ALGORITHM: "HS256"
        ACCESS_TOKEN_EXPIRE_MINUTES: 30
        SQLITE_URL: "sqlite:///db.db"
        POSTGRES_USER: "suave"
        POSTGRES_PASSWORD: "suave"
        POSTGRES_DB: "authsvc"
        POSTGRES_URL: "postgresql+psycopg2://suave:suave@postgres:5432/authsvc"